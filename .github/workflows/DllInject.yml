name: Inject Dll Files

on:
  workflow_call:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      BUILD_X64: ${{ steps.output.outputs.BUILD_X64 }}
      BUILD_ARM64: ${{ steps.output.outputs.BUILD_ARM64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Output
        id: output
        run: |
          echo "BUILD_X64=$(ls original_dll/x64/ | sort -rn | awk 'NR==1')" >> "$GITHUB_OUTPUT"
          echo "BUILD_ARM64=$(ls original_dll/arm64/ | sort -rn | awk 'NR==1')" >> "$GITHUB_OUTPUT"

  inject:
    needs: check
    runs-on: windows-latest
    env:
      BUILD_X64: ${{ needs.check.outputs.BUILD_X64 }}
      BUILD_ARM64: ${{ needs.check.outputs.BUILD_ARM64 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy
        run: |
          echo ${{ env.BUILD_X64 }} ${{ env.BUILD_ARM64 }}
          Copy-Item -Path original_dll/x64/${{ env.BUILD_X64 }}/*.dll -Destination DLLs/x64 -Force
          Copy-Item -Path original_dll/arm64/${{ env.BUILD_ARM64 }}/*.dll -Destination DLLs/arm64 -Force

      - name: Inject
        run: |
          ./scripts/DllInject.exe "DLLs/x64/icu.dll" "WsaPatch.dll"
          ./scripts/DllInject.exe "DLLs/arm64/icu.dll" "WsaPatch.dll"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DLLs
          path: DLLs/

      - name: Commit
        run: |
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git add DLLs
          git commit -m "update icu.dll and winhttp.dll"
          git pull

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          