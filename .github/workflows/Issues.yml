name: Auto Comment Issues

on:
  issues:
    types:
      - labeled

env:
  BODY: ${{ github.event.issue.body }}
  USERNAME: ${{ github.event.issue.user.login }}

jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo "${{ github.event.issue.title }}"
          echo "${{ github.event.issue.user.login }}"
          echo "${{ github.event.issue.body }}"
  
  comment_1:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'CustomBuild' || github.event.label.name == 'UploadDll' }}
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. We are checking your request. More information will be presented later.

  get_arg_cb:
    needs: echo
    if: ${{ github.event.label.name == 'CustomBuild' }}
    outputs:
      arch: ${{ steps.ga_c.outputs.arch }}
      release_type: ${{ steps.ga_c.outputs.release_type }}
      root_sol: ${{ steps.ga_c.outputs.root_sol }}
      magisk_ver: ${{ steps.ga_c.outputs.magisk_ver }}
      gapps_brand: ${{ steps.ga_c.outputs.gapps_brand }}
      remove_amazon: ${{ steps.ga_c.outputs.remove_amazon }}
      isSuccess: ${{ steps.ga_c.outputs.isSuccess }}
      skip: ${{ steps.check.outputs.skip }}
      type: ${{ steps.check.outputs.type }}
      url: ${{ steps.check.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          check-latest: true
          python-version: '3.9'
      - name: Get Arguments(CustomBuild)
        id: ga_c
        run: python3 scripts/Issues.py "Custom Build"

      - name: Clone Repository
        run: git clone https://github.com/LSPosed/MagiskOnWSALocal.git
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          check-latest: true
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          pip3 install -r MagiskOnWSALocal/scripts/requirements.txt
      - name: Get Latest Version
        id: get
        run: |
          export WSA_WORK_ENV="ENV"
          cd MagiskOnWSALocal/scripts
          touch ENV
          result=$(python3 generateWSALinks.py ${{ steps.ga_c.outputs.arch }} ${{ steps.ga_c.outputs.release_type }} download wsa.zip | grep "WSA Build Version")
          echo ${result// /_} >> "$GITHUB_OUTPUT"
      - name: Echo
        run: |
          echo "LATEST_VERSION=${{ steps.get.outputs.WSA_Build_Version }}"

      - name: Check builds.json
        id: check
        run: python3 scripts/CheckBuilds.py "${{ steps.get.outputs.WSA_Build_Version }}" ${{ steps.ga_c.outputs.arch }} ${{ steps.ga_c.outputs.root_sol }} ${{ steps.ga_c.outputs.gapps_brand }}

  get_arg_dd:
    needs: echo
    if: ${{ github.event.label.name == 'UploadDll' }}
    outputs:
      arch: ${{ steps.ga_d.outputs.arch }}
      version: ${{ steps.ga_d.outputs.version }}
      build: ${{ steps.ga_d.outputs.build }}
      url: ${{ steps.ga_d.outputs.url }}
      format: ${{ steps.ga_d.outputs.format }}
      upload: ${{ steps.ga_d.outputs.upload }}
      username: ${{ steps.ga_d.outputs.username }}
      isSuccess: ${{ steps.ga_d.outputs.isSuccess }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          check-latest: true
          python-version: '3.9'
      - name: Get Arguments(DownloadDll)
        id: ga_d
        run: python3 scripts/Issues.py "Upload Original Dll File"
    
  comment_2_cb:
    needs: get_arg_cb
    if: needs.get_arg_cb.outputs.isSuccess != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Wrong input! Please check your input or contact the repository owner.
  comment_2_dd:
    needs: get_arg_dd
    if: needs.get_arg_dd.outputs.isSuccess != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Wrong input! Please check your input or contact the repository owner.

  comment_cb_1:
    needs: get_arg_cb
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        if: needs.get_arg_cb.outputs.skip == 'false'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. Your custom build has started building.It will be finished in 20 minutes. Please go to the URL below for more details.
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
      - name: Create comment
        if: needs.get_arg_cb.outputs.skip == 'true' && needs.get_arg_cb.outputs.type == 'Build'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. Your request has already been built. Please go to the URL below and download the Artifact.
            > ${{ needs.get_arg_cb.outputs.url }}
      - name: Create comment
        if: needs.get_arg_cb.outputs.skip == 'true' && needs.get_arg_cb.outputs.type == 'Release'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. Your request has already been released. Please go to the URL below to download it.
            > ${{ needs.get_arg_cb.outputs.url }}
      - name: Close issue
        if: needs.get_arg_cb.outputs.skip == 'true'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          close-reason: completed
  
  custom_build:
    needs: get_arg_cb
    if: needs.get_arg_cb.outputs.skip == 'false'
    uses: ./.github/workflows/CustomBuild.yml
    with:
      arch: ${{ needs.get_arg_cb.outputs.arch }}
      release_type: ${{ needs.get_arg_cb.outputs.release_type }}
      root_sol: ${{ needs.get_arg_cb.outputs.root_sol }}
      magisk_ver: ${{ needs.get_arg_cb.outputs.magisk_ver }}
      gapps_brand: ${{ needs.get_arg_cb.outputs.gapps_brand }}
      remove_amazon: ${{ needs.get_arg_cb.outputs.remove_amazon }}
      custom_command: ""

  comment_cb_2:
    needs: custom_build
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. Your custom WSA build has been built. Please go to the URL below and download the Artifact.  
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
      - name: Close issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          close-reason: completed

  comment_dd_1:
    needs: get_arg_dd
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. The download has been started. It will be finished in 5 minutes. Please go to the URL below for more details.
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  

  download_dll:
    needs: get_arg_dd
    uses: ./.github/workflows/DownloadDll.yml
    with:
      arch: ${{ needs.get_arg_dd.outputs.arch }}
      version: ${{ needs.get_arg_dd.outputs.version }}
      build: ${{ needs.get_arg_dd.outputs.build }}
      url: ${{ needs.get_arg_dd.outputs.url }}
      format: ${{ needs.get_arg_dd.outputs.format }}
      upload: ${{ needs.get_arg_dd.outputs.upload }}

  comment_dd_2:
    needs: download_dll
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello ${{ github.event.issue.user.login }}. The download has been finished. Please go to the URL below for more details. 
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
            
            Thank you for uploading.
      - name: Close issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          close-reason: completed